digraph g {
   buffer [shape=doublecircle];
   egress [shape=doublecircle];
   _condition_0 [shape=box label="((ingress_metadata.bypass_lookups & 1) == 0)"];
   _condition_0 -> rmac [arrowhead=odot];
   rmac [shape=ellipse];
   rmac -> _condition_1 [arrowhead=normal label="rmac_hit"];
   _condition_1 [shape=box label="((ingress_metadata.bypass_lookups & 2) == 0)"];
   _condition_1 -> _condition_4 [arrowhead=odot];
   _condition_4 [shape=box label="(not (ingress_metadata.bypass_lookups == 65535))"];
   _condition_4 -> _condition_5 [arrowhead=odot];
   _condition_5 [shape=box label="(nexthop_metadata.nexthop_type == 1)"];
   _condition_5 -> nexthop [arrowhead=odot];
   nexthop [shape=ellipse];
   nexthop -> lag_group [arrowhead=normal label="nop"];
   lag_group [shape=ellipse];
   lag_group -> _condition_6 [arrowhead=normal label="set_lag_miss"];
   _condition_6 [shape=box label="((ingress_metadata.bypass_lookups & 32) == 0)"];
   _condition_6 -> buffer [arrowhead=odot];
   _condition_6 -> system_acl [arrowhead=dot];
   system_acl [shape=ellipse];
   system_acl -> _condition_7 [arrowhead=normal label="nop"];
   _condition_7 [shape=box label="(ingress_metadata.drop_flag == 1)"];
   _condition_7 -> buffer [arrowhead=odot];
   _condition_7 -> drop_stats [arrowhead=dot];
   drop_stats [shape=ellipse];
   drop_stats -> buffer [arrowhead=normal label="drop_stats_update"];
   system_acl -> _condition_7 [arrowhead=normal label="redirect_to_cpu"];
   system_acl -> _condition_7 [arrowhead=normal label="redirect_to_cpu_with_reason"];
   system_acl -> _condition_7 [arrowhead=normal label="copy_to_cpu"];
   system_acl -> _condition_7 [arrowhead=normal label="copy_to_cpu_with_reason"];
   system_acl -> _condition_7 [arrowhead=normal label="drop_packet"];
   system_acl -> _condition_7 [arrowhead=normal label="drop_packet_with_reason"];
   system_acl -> _condition_7 [arrowhead=normal label="negative_mirror"];
   lag_group -> _condition_6 [arrowhead=normal label="set_lag_port"];
   lag_group -> _condition_6 [arrowhead=normal label="set_lag_remote_port"];
   nexthop -> lag_group [arrowhead=normal label="set_nexthop_details"];
   nexthop -> lag_group [arrowhead=normal label="set_nexthop_details_for_post_routed_flood"];
   _condition_5 -> ecmp_group [arrowhead=dot];
   ecmp_group [shape=ellipse];
   ecmp_group -> lag_group [arrowhead=normal label="nop"];
   ecmp_group -> lag_group [arrowhead=normal label="set_ecmp_nexthop_details"];
   ecmp_group -> lag_group [arrowhead=normal label="set_ecmp_nexthop_details_for_post_routed_flood"];
   _condition_4 -> fwd_result [arrowhead=dot];
   fwd_result [shape=ellipse];
   fwd_result -> _condition_5 [arrowhead=normal label="nop"];
   fwd_result -> _condition_5 [arrowhead=normal label="set_l2_redirect_action"];
   fwd_result -> _condition_5 [arrowhead=normal label="set_fib_redirect_action"];
   fwd_result -> _condition_5 [arrowhead=normal label="set_cpu_redirect_action"];
   fwd_result -> _condition_5 [arrowhead=normal label="set_acl_redirect_action"];
   fwd_result -> _condition_5 [arrowhead=normal label="set_racl_redirect_action"];
   fwd_result -> _condition_5 [arrowhead=normal label="set_nat_redirect_action"];
   fwd_result -> _condition_5 [arrowhead=normal label="set_multicast_route_action"];
   fwd_result -> _condition_5 [arrowhead=normal label="set_multicast_bridge_action"];
   fwd_result -> _condition_5 [arrowhead=normal label="set_multicast_flood"];
   fwd_result -> _condition_5 [arrowhead=normal label="set_multicast_drop"];
   _condition_1 -> _condition_2 [arrowhead=dot];
   _condition_2 [shape=box label="((l3_metadata.lkp_ip_type == 1) and (ipv4_metadata.ipv4_unicast_enabled == 1))"];
   _condition_2 -> _condition_3 [arrowhead=odot];
   _condition_3 [shape=box label="((l3_metadata.lkp_ip_type == 2) and (ipv6_metadata.ipv6_unicast_enabled == 1))"];
   _condition_3 -> _condition_4 [arrowhead=odot];
   _condition_3 -> ipv6_fib_lpm [arrowhead=dot];
   ipv6_fib_lpm [shape=ellipse];
   ipv6_fib_lpm -> _condition_4 [arrowhead=normal label="on_miss"];
   ipv6_fib_lpm -> _condition_4 [arrowhead=normal label="fib_hit_nexthop"];
   ipv6_fib_lpm -> _condition_4 [arrowhead=normal label="fib_hit_ecmp"];
   _condition_2 -> ipv4_fib_lpm [arrowhead=dot];
   ipv4_fib_lpm [shape=ellipse];
   ipv4_fib_lpm -> _condition_4 [arrowhead=normal label="on_miss"];
   ipv4_fib_lpm -> _condition_4 [arrowhead=normal label="fib_hit_nexthop"];
   ipv4_fib_lpm -> _condition_4 [arrowhead=normal label="fib_hit_ecmp"];
   rmac -> _condition_1 [arrowhead=normal label="rmac_miss"];
   _condition_0 -> dmac [arrowhead=dot];
   dmac [shape=ellipse];
   dmac -> rmac [arrowhead=normal label="nop"];
   dmac -> rmac [arrowhead=normal label="dmac_hit"];
   dmac -> rmac [arrowhead=normal label="dmac_multicast_hit"];
   dmac -> rmac [arrowhead=normal label="dmac_miss"];
   dmac -> rmac [arrowhead=normal label="dmac_redirect_nexthop"];
   dmac -> rmac [arrowhead=normal label="dmac_redirect_ecmp"];
   dmac -> rmac [arrowhead=normal label="dmac_drop"];
   buffer -> _condition_8
   _condition_8 [shape=box label="(intrinsic_metadata.egress_rid != 0)"];
   _condition_8 -> egress_port_mapping [arrowhead=odot];
   egress_port_mapping [shape=ellipse];
   egress_port_mapping -> vlan_decap [arrowhead=normal label="egress_port_type_normal"];
   vlan_decap [shape=ellipse];
   vlan_decap -> _condition_9 [arrowhead=normal label="nop"];
   _condition_9 [shape=box label="((egress_metadata.routed == 0) or (l3_metadata.nexthop_index != 0))"];
   _condition_9 -> rewrite_multicast [arrowhead=odot];
   rewrite_multicast [shape=ellipse];
   rewrite_multicast -> _condition_10 [arrowhead=normal label="nop"];
   _condition_10 [shape=box label="(egress_metadata.routed == 1)"];
   _condition_10 -> mtu [arrowhead=odot];
   mtu [shape=ellipse];
   mtu -> egress_filter [arrowhead=normal label="mtu_miss"];
   egress_filter [shape=ellipse];
   egress_filter -> _condition_11 [arrowhead=normal label="egress_filter_check"];
   _condition_11 [shape=box label="(multicast_metadata.inner_replica == 1)"];
   _condition_11 -> _condition_13 [arrowhead=odot];
   _condition_13 [shape=box label="(egress_metadata.bypass == 0)"];
   _condition_13 -> egress [arrowhead=odot];
   _condition_13 -> egress_system_acl [arrowhead=dot];
   egress_system_acl [shape=ellipse];
   egress_system_acl -> egress [arrowhead=normal label="nop"];
   egress_system_acl -> egress [arrowhead=normal label="drop_packet"];
   egress_system_acl -> egress [arrowhead=normal label="egress_copy_to_cpu"];
   egress_system_acl -> egress [arrowhead=normal label="egress_redirect_to_cpu"];
   egress_system_acl -> egress [arrowhead=normal label="egress_copy_to_cpu_with_reason"];
   egress_system_acl -> egress [arrowhead=normal label="egress_redirect_to_cpu_with_reason"];
   egress_system_acl -> egress [arrowhead=normal label="egress_mirror"];
   egress_system_acl -> egress [arrowhead=normal label="egress_mirror_drop"];
   _condition_11 -> _condition_12 [arrowhead=dot];
   _condition_12 [shape=box label="(((((tunnel_metadata.ingress_tunnel_type == 0) and (tunnel_metadata.egress_tunnel_type == 0)) and (egress_filter_metadata.bd == 0)) and (egress_filter_metadata.ifindex_check == 0)) or (((tunnel_metadata.ingress_tunnel_type != 0) and (tunnel_metadata.egress_tunnel_type != 0)) and (egress_filter_metadata.inner_bd == 0)))"];
   _condition_12 -> _condition_13 [arrowhead=odot];
   _condition_12 -> egress_filter_drop [arrowhead=dot];
   egress_filter_drop [shape=ellipse];
   egress_filter_drop -> _condition_13 [arrowhead=normal label="set_egress_filter_drop"];
   mtu -> egress_filter [arrowhead=normal label="ipv4_mtu_check"];
   mtu -> egress_filter [arrowhead=normal label="ipv6_mtu_check"];
   _condition_10 -> l3_rewrite [arrowhead=dot];
   l3_rewrite [shape=ellipse];
   l3_rewrite -> smac_rewrite [arrowhead=normal label="nop"];
   smac_rewrite [shape=ellipse];
   smac_rewrite -> mtu [arrowhead=normal label="rewrite_smac"];
   l3_rewrite -> smac_rewrite [arrowhead=normal label="ipv4_unicast_rewrite"];
   l3_rewrite -> smac_rewrite [arrowhead=normal label="ipv4_multicast_rewrite"];
   l3_rewrite -> smac_rewrite [arrowhead=normal label="ipv6_unicast_rewrite"];
   l3_rewrite -> smac_rewrite [arrowhead=normal label="ipv6_multicast_rewrite"];
   l3_rewrite -> smac_rewrite [arrowhead=normal label="mpls_rewrite"];
   rewrite_multicast -> _condition_10 [arrowhead=normal label="rewrite_ipv4_multicast"];
   rewrite_multicast -> _condition_10 [arrowhead=normal label="rewrite_ipv6_multicast"];
   _condition_9 -> rewrite [arrowhead=dot];
   rewrite [shape=ellipse];
   rewrite -> _condition_10 [arrowhead=normal label="nop"];
   rewrite -> _condition_10 [arrowhead=normal label="set_l2_rewrite"];
   rewrite -> _condition_10 [arrowhead=normal label="set_l2_rewrite_with_tunnel"];
   rewrite -> _condition_10 [arrowhead=normal label="set_l3_rewrite"];
   rewrite -> _condition_10 [arrowhead=normal label="set_l3_rewrite_with_tunnel"];
   rewrite -> _condition_10 [arrowhead=normal label="set_mpls_swap_push_rewrite_l2"];
   rewrite -> _condition_10 [arrowhead=normal label="set_mpls_push_rewrite_l2"];
   rewrite -> _condition_10 [arrowhead=normal label="set_mpls_swap_push_rewrite_l3"];
   rewrite -> _condition_10 [arrowhead=normal label="set_mpls_push_rewrite_l3"];
   vlan_decap -> _condition_9 [arrowhead=normal label="remove_vlan_single_tagged"];
   vlan_decap -> _condition_9 [arrowhead=normal label="remove_vlan_double_tagged"];
   egress_port_mapping -> egress_filter [arrowhead=normal label="egress_port_type_fabric"];
   egress_port_mapping -> egress_filter [arrowhead=normal label="egress_port_type_cpu"];
   _condition_8 -> rid [arrowhead=dot];
   rid [shape=ellipse];
   rid -> replica_type [arrowhead=normal label="nop"];
   replica_type [shape=ellipse];
   replica_type -> egress_port_mapping [arrowhead=normal label="nop"];
   replica_type -> egress_port_mapping [arrowhead=normal label="set_replica_copy_bridged"];
   rid -> replica_type [arrowhead=normal label="outer_replica_from_rid"];
   rid -> replica_type [arrowhead=normal label="inner_replica_from_rid"];
}
