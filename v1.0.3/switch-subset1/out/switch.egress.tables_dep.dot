digraph egress {
_condition_2 [shape=box label="_condition_2\n(intrinsic_metadata.egress_rid != 0)"];
_condition_3 [shape=box label="_condition_3\n((egress_metadata.routed == 0) or
(l3_metadata.nexthop_index != 0))"];
_condition_4 [shape=box label="_condition_4\n(egress_metadata.routed == 1)"];
_condition_5 [shape=box label="_condition_5\n(multicast_metadata.inner_replica == 1)"];
_condition_6 [shape=box label="_condition_6\n(((((tunnel_metadata.ingress_tunnel_type == 0) and
(tunnel_metadata.egress_tunnel_type == 0)) and
(egress_filter_metadata.bd == 0)) and
(egress_filter_metadata.ifindex_check == 0)) or
(((tunnel_metadata.ingress_tunnel_type != 0) and
(tunnel_metadata.egress_tunnel_type != 0)) and
(egress_filter_metadata.inner_bd == 0)))"];
_condition_7 [shape=box label="_condition_7\n(egress_metadata.bypass == 0)"];
_condition_2 -> rid [color=green  label="True"];
_condition_3 -> rewrite [color=green  label="True"];
_condition_3 -> rewrite_multicast [color=green  label="False" arrowhead = diamond];
_condition_4 -> l3_rewrite [color=green  label="True"];
_condition_4 -> smac_rewrite [color=green  label="True"];
_condition_5 -> _condition_6 [color=green  label="True"];
_condition_6 -> egress_filter_drop [color=green  label="True"];
_condition_7 -> egress_system_acl [color=green  label="True"];
egress_filter -> _condition_6 [color=red ];
egress_port_mapping -> _condition_3 [color=green  label="egress_port_type_normal"];
egress_port_mapping -> vlan_decap [color=green  label="egress_port_type_normal"];
mtu -> egress_system_acl [color=red ];
replica_type -> _condition_3 [color=red ];
rewrite -> _condition_4 [color=red ];
rewrite -> egress_filter [color=blue ];
rewrite -> mtu [color=red ];
rewrite_multicast -> l3_rewrite [color=blue ];
rid -> _condition_5 [color=red ];
rid -> egress_port_mapping [color=blue ];
rid -> replica_type [color=red ];
}
