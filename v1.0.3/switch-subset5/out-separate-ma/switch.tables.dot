digraph g {
   buffer [shape=doublecircle];
   egress [shape=doublecircle];
   ingress_port_mapping [shape=ellipse];
   ingress_port_mapping -> ingress_port_properties [arrowhead=normal label="set_ifindex"];
   ingress_port_properties [shape=ellipse];
   ingress_port_properties -> validate_outer_ethernet [arrowhead=normal label="set_ingress_port_properties"];
   validate_outer_ethernet [shape=ellipse];
   validate_outer_ethernet -> switch_config_params [arrowhead=normal label="malformed_outer_ethernet_packet"];
   switch_config_params [shape=ellipse];
   switch_config_params -> port_vlan_mapping [arrowhead=normal label="set_config_parameters"];
   port_vlan_mapping [shape=ellipse];
   port_vlan_mapping -> adjust_lkp_fields [arrowhead=normal label="set_bd_properties"];
   adjust_lkp_fields [shape=ellipse];
   adjust_lkp_fields -> _condition_2 [arrowhead=normal label="non_ip_lkp"];
   _condition_2 [shape=box label="((ingress_metadata.port_type == 0) and (l2_metadata.stp_group != 0))"];
   _condition_2 -> _condition_3 [arrowhead=odot];
   _condition_3 [shape=box label="((ingress_metadata.bypass_lookups & 8) == 0)"];
   _condition_3 -> _condition_6 [arrowhead=odot];
   _condition_6 [shape=box label="((ingress_metadata.port_type == 0) and (security_metadata.ipsg_enabled == 1))"];
   _condition_6 -> _condition_7 [arrowhead=odot];
   _condition_7 [shape=box label="(ingress_metadata.port_type != 0)"];
   _condition_7 -> _condition_11 [arrowhead=odot];
   _condition_11 [shape=box label="(ingress_metadata.port_type == 0)"];
   _condition_11 -> _condition_12 [arrowhead=odot];
   _condition_12 [shape=box label="(ingress_metadata.port_type != 1)"];
   _condition_12 -> _condition_30 [arrowhead=odot];
   _condition_30 [shape=box label="((ingress_metadata.bypass_lookups & 16) == 0)"];
   _condition_30 -> _condition_31 [arrowhead=odot];
   _condition_31 [shape=box label="(((tunnel_metadata.tunnel_terminate == 0) and (valid ipv4)) or ((tunnel_metadata.tunnel_terminate == 1) and (valid inner_ipv4)))"];
   _condition_31 -> compute_non_ip_hashes [arrowhead=odot];
   compute_non_ip_hashes [shape=ellipse];
   compute_non_ip_hashes -> compute_other_hashes [arrowhead=normal label="compute_lkp_non_ip_hash"];
   compute_other_hashes [shape=ellipse];
   compute_other_hashes -> _condition_32 [arrowhead=normal label="computed_two_hashes"];
   _condition_32 [shape=box label="((ingress_metadata.bypass_lookups & 16) == 0)"];
   _condition_32 -> _condition_33 [arrowhead=odot];
   _condition_33 [shape=box label="(ingress_metadata.port_type != 1)"];
   _condition_33 -> fabric_lag [arrowhead=odot];
   fabric_lag [shape=ellipse];
   fabric_lag -> traffic_class [arrowhead=normal label="nop"];
   traffic_class [shape=ellipse];
   traffic_class -> _condition_38 [arrowhead=normal label="nop"];
   _condition_38 [shape=box label="(ingress_metadata.port_type != 1)"];
   _condition_38 -> buffer [arrowhead=odot];
   _condition_38 -> _condition_39 [arrowhead=dot];
   _condition_39 [shape=box label="((ingress_metadata.bypass_lookups & 32) == 0)"];
   _condition_39 -> buffer [arrowhead=odot];
   _condition_39 -> system_acl [arrowhead=dot];
   system_acl [shape=ellipse];
   system_acl -> _condition_40 [arrowhead=normal label="nop"];
   _condition_40 [shape=box label="(ingress_metadata.drop_flag == 1)"];
   _condition_40 -> buffer [arrowhead=odot];
   _condition_40 -> drop_stats [arrowhead=dot];
   drop_stats [shape=ellipse];
   drop_stats -> buffer [arrowhead=normal label="drop_stats_update"];
   system_acl -> _condition_40 [arrowhead=normal label="redirect_to_cpu"];
   system_acl -> _condition_40 [arrowhead=normal label="redirect_to_cpu_with_reason"];
   system_acl -> _condition_40 [arrowhead=normal label="copy_to_cpu"];
   system_acl -> _condition_40 [arrowhead=normal label="copy_to_cpu_with_reason"];
   system_acl -> _condition_40 [arrowhead=normal label="drop_packet"];
   system_acl -> _condition_40 [arrowhead=normal label="drop_packet_with_reason"];
   system_acl -> _condition_40 [arrowhead=normal label="negative_mirror"];
   traffic_class -> _condition_38 [arrowhead=normal label="set_icos"];
   traffic_class -> _condition_38 [arrowhead=normal label="set_queue"];
   traffic_class -> _condition_38 [arrowhead=normal label="set_icos_and_queue"];
   fabric_lag -> traffic_class [arrowhead=normal label="set_fabric_lag_port"];
   fabric_lag -> traffic_class [arrowhead=normal label="set_fabric_multicast"];
   _condition_33 -> ingress_bd_stats [arrowhead=dot];
   ingress_bd_stats [shape=ellipse];
   ingress_bd_stats -> acl_stats [arrowhead=normal label="update_ingress_bd_stats"];
   acl_stats [shape=ellipse];
   acl_stats -> storm_control_stats [arrowhead=normal label="acl_stats_update"];
   storm_control_stats [shape=ellipse];
   storm_control_stats -> _condition_34 [arrowhead=normal label="nop"];
   _condition_34 [shape=box label="(not (ingress_metadata.bypass_lookups == 65535))"];
   _condition_34 -> _condition_35 [arrowhead=odot];
   _condition_35 [shape=box label="(nexthop_metadata.nexthop_type == 1)"];
   _condition_35 -> nexthop [arrowhead=odot];
   nexthop [shape=ellipse];
   nexthop -> _condition_36 [arrowhead=normal label="nop"];
   _condition_36 [shape=box label="(ingress_metadata.egress_ifindex == 65535)"];
   _condition_36 -> lag_group [arrowhead=odot];
   lag_group [shape=ellipse];
   lag_group -> _condition_37 [arrowhead=normal label="set_lag_miss"];
   _condition_37 [shape=box label="(l2_metadata.learning_enabled == 1)"];
   _condition_37 -> fabric_lag [arrowhead=odot];
   _condition_37 -> learn_notify [arrowhead=dot];
   learn_notify [shape=ellipse];
   learn_notify -> fabric_lag [arrowhead=normal label="nop"];
   learn_notify -> fabric_lag [arrowhead=normal label="generate_learn_notify"];
   lag_group -> _condition_37 [arrowhead=normal label="set_lag_port"];
   lag_group -> _condition_37 [arrowhead=normal label="set_lag_remote_port"];
   _condition_36 -> bd_flood [arrowhead=dot];
   bd_flood [shape=ellipse];
   bd_flood -> _condition_37 [arrowhead=normal label="nop"];
   bd_flood -> _condition_37 [arrowhead=normal label="set_bd_flood_mc_index"];
   nexthop -> _condition_36 [arrowhead=normal label="set_nexthop_details"];
   nexthop -> _condition_36 [arrowhead=normal label="set_nexthop_details_for_post_routed_flood"];
   _condition_35 -> ecmp_group [arrowhead=dot];
   ecmp_group [shape=ellipse];
   ecmp_group -> _condition_36 [arrowhead=normal label="nop"];
   ecmp_group -> _condition_36 [arrowhead=normal label="set_ecmp_nexthop_details"];
   ecmp_group -> _condition_36 [arrowhead=normal label="set_ecmp_nexthop_details_for_post_routed_flood"];
   _condition_34 -> fwd_result [arrowhead=dot];
   fwd_result [shape=ellipse];
   fwd_result -> _condition_35 [arrowhead=normal label="nop"];
   fwd_result -> _condition_35 [arrowhead=normal label="set_l2_redirect_action"];
   fwd_result -> _condition_35 [arrowhead=normal label="set_fib_redirect_action"];
   fwd_result -> _condition_35 [arrowhead=normal label="set_cpu_redirect_action"];
   fwd_result -> _condition_35 [arrowhead=normal label="set_acl_redirect_action"];
   fwd_result -> _condition_35 [arrowhead=normal label="set_racl_redirect_action"];
   fwd_result -> _condition_35 [arrowhead=normal label="set_nat_redirect_action"];
   fwd_result -> _condition_35 [arrowhead=normal label="set_multicast_route_action"];
   fwd_result -> _condition_35 [arrowhead=normal label="set_multicast_bridge_action"];
   fwd_result -> _condition_35 [arrowhead=normal label="set_multicast_flood"];
   fwd_result -> _condition_35 [arrowhead=normal label="set_multicast_drop"];
   _condition_32 -> meter_action [arrowhead=dot];
   meter_action [shape=ellipse];
   meter_action -> _condition_33 [arrowhead=normal label="meter_permit"];
   meter_action -> _condition_33 [arrowhead=normal label="meter_deny"];
   compute_other_hashes -> _condition_32 [arrowhead=normal label="computed_one_hash"];
   _condition_31 -> compute_ipv4_hashes [arrowhead=dot];
   compute_ipv4_hashes [shape=ellipse];
   compute_ipv4_hashes -> compute_other_hashes [arrowhead=normal label="compute_lkp_ipv4_hash"];
   _condition_30 -> meter_index [arrowhead=dot];
   meter_index [shape=ellipse];
   meter_index -> _condition_31 [arrowhead=normal label="nop"];
   _condition_12 -> _condition_13 [arrowhead=dot];
   _condition_13 [shape=box label="(((ingress_metadata.bypass_lookups & 64) == 0) and (ingress_metadata.drop_flag == 0))"];
   _condition_13 -> ingress_l4_src_port [arrowhead=odot];
   ingress_l4_src_port [shape=ellipse];
   ingress_l4_src_port -> ingress_l4_dst_port [arrowhead=normal label="nop"];
   ingress_l4_dst_port [shape=ellipse];
   ingress_l4_dst_port -> _condition_14 [arrowhead=normal label="nop"];
   _condition_14 [shape=box label="(((ingress_metadata.bypass_lookups & 128) == 0) and (ingress_metadata.port_type == 0))"];
   _condition_14 -> _condition_15 [arrowhead=odot];
   _condition_15 [shape=box label="((ingress_metadata.bypass_lookups & 1) == 0)"];
   _condition_15 -> _condition_16 [arrowhead=odot];
   _condition_16 [shape=box label="(l3_metadata.lkp_ip_type == 0)"];
   _condition_16 -> _condition_18 [arrowhead=odot];
   _condition_18 [shape=box label="((ingress_metadata.bypass_lookups & 4) == 0)"];
   _condition_18 -> rmac [arrowhead=odot];
   rmac [shape=ellipse];
   rmac -> _condition_25 [arrowhead=normal label="rmac_hit"];
   _condition_25 [shape=box label="((ingress_metadata.bypass_lookups & 2) == 0)"];
   _condition_25 -> nat_twice [arrowhead=odot];
   nat_twice [shape=ellipse];
   nat_twice -> nat_dst [arrowhead=normal label="on_miss"];
   nat_dst [shape=ellipse];
   nat_dst -> nat_src [arrowhead=normal label="on_miss"];
   nat_src [shape=ellipse];
   nat_src -> nat_flow [arrowhead=normal label="on_miss"];
   nat_flow [shape=ellipse];
   nat_flow -> _condition_30 [arrowhead=normal label="nop"];
   nat_flow -> _condition_30 [arrowhead=normal label="set_src_nat_rewrite_index"];
   nat_flow -> _condition_30 [arrowhead=normal label="set_dst_nat_nexthop_index"];
   nat_flow -> _condition_30 [arrowhead=normal label="set_twice_nat_nexthop_index"];
   nat_src -> _condition_30 [arrowhead=normal label="set_src_nat_rewrite_index"];
   nat_dst -> _condition_30 [arrowhead=normal label="set_dst_nat_nexthop_index"];
   nat_twice -> _condition_30 [arrowhead=normal label="set_twice_nat_nexthop_index"];
   _condition_25 -> _condition_26 [arrowhead=dot];
   _condition_26 [shape=box label="((l3_metadata.lkp_ip_type == 1) and (ipv4_metadata.ipv4_unicast_enabled == 1))"];
   _condition_26 -> _condition_29 [arrowhead=odot];
   _condition_29 [shape=box label="((l3_metadata.urpf_mode == 2) and (l3_metadata.urpf_hit == 1))"];
   _condition_29 -> nat_twice [arrowhead=odot];
   _condition_29 -> urpf_bd [arrowhead=dot];
   urpf_bd [shape=ellipse];
   urpf_bd -> nat_twice [arrowhead=normal label="nop"];
   urpf_bd -> nat_twice [arrowhead=normal label="urpf_bd_miss"];
   _condition_26 -> ipv4_racl [arrowhead=dot];
   ipv4_racl [shape=ellipse];
   ipv4_racl -> _condition_27 [arrowhead=normal label="nop"];
   _condition_27 [shape=box label="(ipv4_metadata.ipv4_urpf_mode != 0)"];
   _condition_27 -> ipv4_fib [arrowhead=odot];
   ipv4_fib [shape=ellipse];
   ipv4_fib -> ipv4_fib_lpm [arrowhead=normal label="on_miss"];
   ipv4_fib_lpm [shape=ellipse];
   ipv4_fib_lpm -> _condition_29 [arrowhead=normal label="on_miss"];
   ipv4_fib_lpm -> _condition_29 [arrowhead=normal label="fib_hit_nexthop"];
   ipv4_fib_lpm -> _condition_29 [arrowhead=normal label="fib_hit_ecmp"];
   ipv4_fib -> _condition_29 [arrowhead=normal label="fib_hit_nexthop"];
   ipv4_fib -> _condition_29 [arrowhead=normal label="fib_hit_ecmp"];
   _condition_27 -> ipv4_urpf [arrowhead=dot];
   ipv4_urpf [shape=ellipse];
   ipv4_urpf -> ipv4_urpf_lpm [arrowhead=normal label="on_miss"];
   ipv4_urpf_lpm [shape=ellipse];
   ipv4_urpf_lpm -> ipv4_fib [arrowhead=normal label="ipv4_urpf_hit"];
   ipv4_urpf_lpm -> ipv4_fib [arrowhead=normal label="urpf_miss"];
   ipv4_urpf -> ipv4_fib [arrowhead=normal label="ipv4_urpf_hit"];
   ipv4_racl -> _condition_27 [arrowhead=normal label="racl_deny"];
   ipv4_racl -> _condition_27 [arrowhead=normal label="racl_permit"];
   ipv4_racl -> _condition_27 [arrowhead=normal label="racl_redirect_nexthop"];
   ipv4_racl -> _condition_27 [arrowhead=normal label="racl_redirect_ecmp"];
   rmac -> _condition_21 [arrowhead=normal label="rmac_miss"];
   _condition_21 [shape=box label="(l3_metadata.lkp_ip_type == 1)"];
   _condition_21 -> nat_twice [arrowhead=odot];
   _condition_21 -> _condition_22 [arrowhead=dot];
   _condition_22 [shape=box label="((ingress_metadata.bypass_lookups & 1) == 0)"];
   _condition_22 -> _condition_23 [arrowhead=odot];
   _condition_23 [shape=box label="(((ingress_metadata.bypass_lookups & 2) == 0) and (multicast_metadata.ipv4_multicast_enabled == 1))"];
   _condition_23 -> nat_twice [arrowhead=odot];
   _condition_23 -> ipv4_multicast_route [arrowhead=dot];
   ipv4_multicast_route [shape=ellipse];
   ipv4_multicast_route -> ipv4_multicast_route_star_g [arrowhead=normal label="on_miss"];
   ipv4_multicast_route_star_g [shape=ellipse];
   ipv4_multicast_route_star_g -> nat_twice [arrowhead=normal label="multicast_route_star_g_miss"];
   ipv4_multicast_route_star_g -> nat_twice [arrowhead=normal label="multicast_route_sm_star_g_hit"];
   ipv4_multicast_route_star_g -> nat_twice [arrowhead=normal label="multicast_route_bidir_star_g_hit"];
   ipv4_multicast_route -> nat_twice [arrowhead=normal label="multicast_route_s_g_hit"];
   _condition_22 -> ipv4_multicast_bridge [arrowhead=dot];
   ipv4_multicast_bridge [shape=ellipse];
   ipv4_multicast_bridge -> ipv4_multicast_bridge_star_g [arrowhead=normal label="on_miss"];
   ipv4_multicast_bridge_star_g [shape=ellipse];
   ipv4_multicast_bridge_star_g -> _condition_23 [arrowhead=normal label="nop"];
   ipv4_multicast_bridge_star_g -> _condition_23 [arrowhead=normal label="multicast_bridge_star_g_hit"];
   ipv4_multicast_bridge -> _condition_23 [arrowhead=normal label="multicast_bridge_s_g_hit"];
   _condition_18 -> _condition_19 [arrowhead=dot];
   _condition_19 [shape=box label="(l3_metadata.lkp_ip_type == 1)"];
   _condition_19 -> rmac [arrowhead=odot];
   _condition_19 -> ip_acl [arrowhead=dot];
   ip_acl [shape=ellipse];
   ip_acl -> rmac [arrowhead=normal label="nop"];
   ip_acl -> rmac [arrowhead=normal label="acl_deny"];
   ip_acl -> rmac [arrowhead=normal label="acl_permit"];
   ip_acl -> rmac [arrowhead=normal label="acl_redirect_nexthop"];
   ip_acl -> rmac [arrowhead=normal label="acl_redirect_ecmp"];
   ip_acl -> rmac [arrowhead=normal label="acl_mirror"];
   _condition_16 -> _condition_17 [arrowhead=dot];
   _condition_17 [shape=box label="((ingress_metadata.bypass_lookups & 4) == 0)"];
   _condition_17 -> rmac [arrowhead=odot];
   _condition_17 -> mac_acl [arrowhead=dot];
   mac_acl [shape=ellipse];
   mac_acl -> rmac [arrowhead=normal label="nop"];
   mac_acl -> rmac [arrowhead=normal label="acl_deny"];
   mac_acl -> rmac [arrowhead=normal label="acl_permit"];
   mac_acl -> rmac [arrowhead=normal label="acl_redirect_nexthop"];
   mac_acl -> rmac [arrowhead=normal label="acl_redirect_ecmp"];
   mac_acl -> rmac [arrowhead=normal label="acl_mirror"];
   _condition_15 -> dmac [arrowhead=dot];
   dmac [shape=ellipse];
   dmac -> _condition_16 [arrowhead=normal label="nop"];
   dmac -> _condition_16 [arrowhead=normal label="dmac_hit"];
   dmac -> _condition_16 [arrowhead=normal label="dmac_multicast_hit"];
   dmac -> _condition_16 [arrowhead=normal label="dmac_miss"];
   dmac -> _condition_16 [arrowhead=normal label="dmac_redirect_nexthop"];
   dmac -> _condition_16 [arrowhead=normal label="dmac_redirect_ecmp"];
   dmac -> _condition_16 [arrowhead=normal label="dmac_drop"];
   _condition_14 -> smac [arrowhead=dot];
   smac [shape=ellipse];
   smac -> _condition_15 [arrowhead=normal label="nop"];
   smac -> _condition_15 [arrowhead=normal label="smac_miss"];
   smac -> _condition_15 [arrowhead=normal label="smac_hit"];
   ingress_l4_dst_port -> _condition_14 [arrowhead=normal label="set_ingress_dst_port_range_id"];
   ingress_l4_src_port -> ingress_l4_dst_port [arrowhead=normal label="set_ingress_src_port_range_id"];
   _condition_13 -> validate_packet [arrowhead=dot];
   validate_packet [shape=ellipse];
   validate_packet -> ingress_l4_src_port [arrowhead=normal label="nop"];
   validate_packet -> ingress_l4_src_port [arrowhead=normal label="set_unicast"];
   validate_packet -> ingress_l4_src_port [arrowhead=normal label="set_unicast_and_ipv6_src_is_link_local"];
   validate_packet -> ingress_l4_src_port [arrowhead=normal label="set_multicast"];
   validate_packet -> ingress_l4_src_port [arrowhead=normal label="set_multicast_and_ipv6_src_is_link_local"];
   validate_packet -> ingress_l4_src_port [arrowhead=normal label="set_broadcast"];
   validate_packet -> ingress_l4_src_port [arrowhead=normal label="set_malformed_packet"];
   _condition_11 -> storm_control [arrowhead=dot];
   storm_control [shape=ellipse];
   storm_control -> _condition_12 [arrowhead=normal label="nop"];
   storm_control -> _condition_12 [arrowhead=normal label="set_storm_control_meter"];
   _condition_7 -> fabric_ingress_dst_lkp [arrowhead=dot];
   fabric_ingress_dst_lkp [shape=ellipse];
   fabric_ingress_dst_lkp -> _condition_8 [arrowhead=normal label="nop"];
   _condition_8 [shape=box label="(ingress_metadata.port_type == 1)"];
   _condition_8 -> _condition_11 [arrowhead=odot];
   _condition_8 -> _condition_9 [arrowhead=dot];
   _condition_9 [shape=box label="(valid fabric_header_multicast)"];
   _condition_9 -> _condition_10 [arrowhead=odot];
   _condition_10 [shape=box label="(tunnel_metadata.tunnel_terminate == 0)"];
   _condition_10 -> _condition_11 [arrowhead=odot];
   _condition_10 -> native_packet_over_fabric [arrowhead=dot];
   native_packet_over_fabric [shape=ellipse];
   native_packet_over_fabric -> _condition_11 [arrowhead=normal label="non_ip_over_fabric"];
   native_packet_over_fabric -> _condition_11 [arrowhead=normal label="ipv4_over_fabric"];
   _condition_9 -> fabric_ingress_src_lkp [arrowhead=dot];
   fabric_ingress_src_lkp [shape=ellipse];
   fabric_ingress_src_lkp -> _condition_10 [arrowhead=normal label="nop"];
   fabric_ingress_src_lkp -> _condition_10 [arrowhead=normal label="set_ingress_ifindex_properties"];
   fabric_ingress_dst_lkp -> _condition_8 [arrowhead=normal label="terminate_cpu_packet"];
   fabric_ingress_dst_lkp -> _condition_8 [arrowhead=normal label="switch_fabric_unicast_packet"];
   fabric_ingress_dst_lkp -> _condition_8 [arrowhead=normal label="terminate_fabric_unicast_packet"];
   fabric_ingress_dst_lkp -> _condition_8 [arrowhead=normal label="switch_fabric_multicast_packet"];
   fabric_ingress_dst_lkp -> _condition_8 [arrowhead=normal label="terminate_fabric_multicast_packet"];
   _condition_6 -> ipsg [arrowhead=dot];
   ipsg [shape=ellipse];
   ipsg -> ipsg_permit_special [arrowhead=normal label="on_miss"];
   ipsg_permit_special [shape=ellipse];
   ipsg_permit_special -> _condition_7 [arrowhead=normal label="ipsg_miss"];
   _condition_3 -> _condition_4 [arrowhead=dot];
   _condition_4 [shape=box label="(qos_metadata.trust_dscp == 1)"];
   _condition_4 -> _condition_5 [arrowhead=odot];
   _condition_5 [shape=box label="(qos_metadata.trust_pcp == 1)"];
   _condition_5 -> _condition_6 [arrowhead=odot];
   _condition_5 -> ingress_qos_map_pcp [arrowhead=dot];
   ingress_qos_map_pcp [shape=ellipse];
   ingress_qos_map_pcp -> _condition_6 [arrowhead=normal label="nop"];
   ingress_qos_map_pcp -> _condition_6 [arrowhead=normal label="set_ingress_tc"];
   ingress_qos_map_pcp -> _condition_6 [arrowhead=normal label="set_ingress_color"];
   ingress_qos_map_pcp -> _condition_6 [arrowhead=normal label="set_ingress_tc_and_color"];
   _condition_4 -> ingress_qos_map_dscp [arrowhead=dot];
   ingress_qos_map_dscp [shape=ellipse];
   ingress_qos_map_dscp -> _condition_6 [arrowhead=normal label="nop"];
   ingress_qos_map_dscp -> _condition_6 [arrowhead=normal label="set_ingress_tc"];
   ingress_qos_map_dscp -> _condition_6 [arrowhead=normal label="set_ingress_color"];
   ingress_qos_map_dscp -> _condition_6 [arrowhead=normal label="set_ingress_tc_and_color"];
   _condition_2 -> spanning_tree [arrowhead=dot];
   spanning_tree [shape=ellipse];
   spanning_tree -> _condition_3 [arrowhead=normal label="set_stp_state"];
   adjust_lkp_fields -> _condition_2 [arrowhead=normal label="ipv4_lkp"];
   port_vlan_mapping -> adjust_lkp_fields [arrowhead=normal label="port_vlan_mapping_miss"];
   validate_outer_ethernet -> _condition_0 [arrowhead=normal label="set_valid_outer_unicast_packet_untagged"];
   _condition_0 [shape=box label="(valid ipv4)"];
   _condition_0 -> switch_config_params [arrowhead=odot];
   _condition_0 -> validate_outer_ipv4_packet [arrowhead=dot];
   validate_outer_ipv4_packet [shape=ellipse];
   validate_outer_ipv4_packet -> switch_config_params [arrowhead=normal label="set_valid_outer_ipv4_packet"];
   validate_outer_ipv4_packet -> switch_config_params [arrowhead=normal label="set_malformed_outer_ipv4_packet"];
   validate_outer_ethernet -> _condition_0 [arrowhead=normal label="set_valid_outer_unicast_packet_single_tagged"];
   validate_outer_ethernet -> _condition_0 [arrowhead=normal label="set_valid_outer_unicast_packet_double_tagged"];
   validate_outer_ethernet -> _condition_0 [arrowhead=normal label="set_valid_outer_unicast_packet_qinq_tagged"];
   validate_outer_ethernet -> _condition_0 [arrowhead=normal label="set_valid_outer_multicast_packet_untagged"];
   validate_outer_ethernet -> _condition_0 [arrowhead=normal label="set_valid_outer_multicast_packet_single_tagged"];
   validate_outer_ethernet -> _condition_0 [arrowhead=normal label="set_valid_outer_multicast_packet_double_tagged"];
   validate_outer_ethernet -> _condition_0 [arrowhead=normal label="set_valid_outer_multicast_packet_qinq_tagged"];
   validate_outer_ethernet -> _condition_0 [arrowhead=normal label="set_valid_outer_broadcast_packet_untagged"];
   validate_outer_ethernet -> _condition_0 [arrowhead=normal label="set_valid_outer_broadcast_packet_single_tagged"];
   validate_outer_ethernet -> _condition_0 [arrowhead=normal label="set_valid_outer_broadcast_packet_double_tagged"];
   validate_outer_ethernet -> _condition_0 [arrowhead=normal label="set_valid_outer_broadcast_packet_qinq_tagged"];
   buffer -> _condition_41
   _condition_41 [shape=box label="((intrinsic_metadata.deflection_flag == 0) and (egress_metadata.bypass == 0))"];
   _condition_41 -> _condition_52 [arrowhead=odot];
   _condition_52 [shape=box label="(egress_metadata.bypass == 0)"];
   _condition_52 -> egress [arrowhead=odot];
   _condition_52 -> egress_system_acl [arrowhead=dot];
   egress_system_acl [shape=ellipse];
   egress_system_acl -> egress [arrowhead=normal label="nop"];
   egress_system_acl -> egress [arrowhead=normal label="drop_packet"];
   egress_system_acl -> egress [arrowhead=normal label="egress_copy_to_cpu"];
   egress_system_acl -> egress [arrowhead=normal label="egress_redirect_to_cpu"];
   egress_system_acl -> egress [arrowhead=normal label="egress_copy_to_cpu_with_reason"];
   egress_system_acl -> egress [arrowhead=normal label="egress_redirect_to_cpu_with_reason"];
   egress_system_acl -> egress [arrowhead=normal label="egress_mirror"];
   egress_system_acl -> egress [arrowhead=normal label="egress_mirror_drop"];
   _condition_41 -> _condition_42 [arrowhead=dot];
   _condition_42 [shape=box label="((standard_metadata.instance_type != 0) and (standard_metadata.instance_type != 5))"];
   _condition_42 -> _condition_43 [arrowhead=odot];
   _condition_43 [shape=box label="(intrinsic_metadata.egress_rid != 0)"];
   _condition_43 -> egress_port_mapping [arrowhead=odot];
   egress_port_mapping [shape=ellipse];
   egress_port_mapping -> _condition_44 [arrowhead=normal label="egress_port_type_normal"];
   _condition_44 [shape=box label="((standard_metadata.instance_type == 0) or (standard_metadata.instance_type == 5))"];
   _condition_44 -> _condition_45 [arrowhead=odot];
   _condition_45 [shape=box label="((egress_metadata.routed == 0) or (l3_metadata.nexthop_index != 0))"];
   _condition_45 -> rewrite_multicast [arrowhead=odot];
   rewrite_multicast [shape=ellipse];
   rewrite_multicast -> egress_bd_map [arrowhead=normal label="nop"];
   egress_bd_map [shape=ellipse];
   egress_bd_map -> _condition_46 [arrowhead=normal label="nop"];
   _condition_46 [shape=box label="((ingress_metadata.bypass_lookups & 8) == 0)"];
   _condition_46 -> _condition_47 [arrowhead=odot];
   _condition_47 [shape=box label="(egress_metadata.routed == 1)"];
   _condition_47 -> mtu [arrowhead=odot];
   mtu [shape=ellipse];
   mtu -> _condition_48 [arrowhead=normal label="mtu_miss"];
   _condition_48 [shape=box label="((nat_metadata.ingress_nat_mode != 0) and (nat_metadata.ingress_nat_mode != nat_metadata.egress_nat_mode))"];
   _condition_48 -> egress_bd_stats [arrowhead=odot];
   egress_bd_stats [shape=ellipse];
   egress_bd_stats -> _condition_49 [arrowhead=normal label="nop"];
   _condition_49 [shape=box label="(egress_metadata.port_type == 0)"];
   _condition_49 -> egress_filter [arrowhead=odot];
   egress_filter [shape=ellipse];
   egress_filter -> _condition_50 [arrowhead=normal label="egress_filter_check"];
   _condition_50 [shape=box label="(multicast_metadata.inner_replica == 1)"];
   _condition_50 -> _condition_52 [arrowhead=odot];
   _condition_50 -> _condition_51 [arrowhead=dot];
   _condition_51 [shape=box label="(((((tunnel_metadata.ingress_tunnel_type == 0) and (tunnel_metadata.egress_tunnel_type == 0)) and (egress_filter_metadata.bd == 0)) and (egress_filter_metadata.ifindex_check == 0)) or (((tunnel_metadata.ingress_tunnel_type != 0) and (tunnel_metadata.egress_tunnel_type != 0)) and (egress_filter_metadata.inner_bd == 0)))"];
   _condition_51 -> _condition_52 [arrowhead=odot];
   _condition_51 -> egress_filter_drop [arrowhead=dot];
   egress_filter_drop [shape=ellipse];
   egress_filter_drop -> _condition_52 [arrowhead=normal label="set_egress_filter_drop"];
   _condition_49 -> egress_vlan_xlate [arrowhead=dot];
   egress_vlan_xlate [shape=ellipse];
   egress_vlan_xlate -> egress_filter [arrowhead=normal label="set_egress_packet_vlan_untagged"];
   egress_vlan_xlate -> egress_filter [arrowhead=normal label="set_egress_packet_vlan_tagged"];
   egress_vlan_xlate -> egress_filter [arrowhead=normal label="set_egress_packet_vlan_double_tagged"];
   _condition_48 -> egress_nat [arrowhead=dot];
   egress_nat [shape=ellipse];
   egress_nat -> egress_bd_stats [arrowhead=normal label="nop"];
   egress_nat -> egress_bd_stats [arrowhead=normal label="set_nat_src_rewrite"];
   egress_nat -> egress_bd_stats [arrowhead=normal label="set_nat_dst_rewrite"];
   egress_nat -> egress_bd_stats [arrowhead=normal label="set_nat_src_dst_rewrite"];
   egress_nat -> egress_bd_stats [arrowhead=normal label="set_nat_src_udp_rewrite"];
   egress_nat -> egress_bd_stats [arrowhead=normal label="set_nat_dst_udp_rewrite"];
   egress_nat -> egress_bd_stats [arrowhead=normal label="set_nat_src_dst_udp_rewrite"];
   egress_nat -> egress_bd_stats [arrowhead=normal label="set_nat_src_tcp_rewrite"];
   egress_nat -> egress_bd_stats [arrowhead=normal label="set_nat_dst_tcp_rewrite"];
   egress_nat -> egress_bd_stats [arrowhead=normal label="set_nat_src_dst_tcp_rewrite"];
   mtu -> _condition_48 [arrowhead=normal label="ipv4_mtu_check"];
   mtu -> _condition_48 [arrowhead=normal label="ipv6_mtu_check"];
   _condition_47 -> l3_rewrite [arrowhead=dot];
   l3_rewrite [shape=ellipse];
   l3_rewrite -> smac_rewrite [arrowhead=normal label="nop"];
   smac_rewrite [shape=ellipse];
   smac_rewrite -> mtu [arrowhead=normal label="rewrite_smac"];
   l3_rewrite -> smac_rewrite [arrowhead=normal label="ipv4_unicast_rewrite"];
   l3_rewrite -> smac_rewrite [arrowhead=normal label="ipv4_multicast_rewrite"];
   _condition_46 -> egress_qos_map [arrowhead=dot];
   egress_qos_map [shape=ellipse];
   egress_qos_map -> _condition_47 [arrowhead=normal label="nop"];
   egress_qos_map -> _condition_47 [arrowhead=normal label="set_mpls_exp_marking"];
   egress_qos_map -> _condition_47 [arrowhead=normal label="set_ip_dscp_marking"];
   egress_qos_map -> _condition_47 [arrowhead=normal label="set_vlan_pcp_marking"];
   egress_bd_map -> _condition_46 [arrowhead=normal label="set_egress_bd_properties"];
   rewrite_multicast -> egress_bd_map [arrowhead=normal label="rewrite_ipv4_multicast"];
   _condition_45 -> rewrite [arrowhead=dot];
   rewrite [shape=ellipse];
   rewrite -> egress_bd_map [arrowhead=normal label="nop"];
   rewrite -> egress_bd_map [arrowhead=normal label="set_l2_rewrite"];
   rewrite -> egress_bd_map [arrowhead=normal label="set_l2_rewrite_with_tunnel"];
   rewrite -> egress_bd_map [arrowhead=normal label="set_l3_rewrite"];
   rewrite -> egress_bd_map [arrowhead=normal label="set_l3_rewrite_with_tunnel"];
   _condition_44 -> vlan_decap [arrowhead=dot];
   vlan_decap [shape=ellipse];
   vlan_decap -> _condition_45 [arrowhead=normal label="nop"];
   vlan_decap -> _condition_45 [arrowhead=normal label="remove_vlan_single_tagged"];
   vlan_decap -> _condition_45 [arrowhead=normal label="remove_vlan_double_tagged"];
   egress_port_mapping -> _condition_49 [arrowhead=normal label="egress_port_type_fabric"];
   egress_port_mapping -> _condition_49 [arrowhead=normal label="egress_port_type_cpu"];
   _condition_43 -> rid [arrowhead=dot];
   rid [shape=ellipse];
   rid -> replica_type [arrowhead=normal label="nop"];
   replica_type [shape=ellipse];
   replica_type -> egress_port_mapping [arrowhead=normal label="nop"];
   replica_type -> egress_port_mapping [arrowhead=normal label="set_replica_copy_bridged"];
   rid -> replica_type [arrowhead=normal label="outer_replica_from_rid"];
   rid -> replica_type [arrowhead=normal label="inner_replica_from_rid"];
   _condition_42 -> mirror [arrowhead=dot];
   mirror [shape=ellipse];
   mirror -> egress_port_mapping [arrowhead=normal label="nop"];
   mirror -> egress_port_mapping [arrowhead=normal label="set_mirror_nhop"];
   mirror -> egress_port_mapping [arrowhead=normal label="set_mirror_bd"];
}
